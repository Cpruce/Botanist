{
  "name": "react-bootstrap-table",
  "version": "1.0.3",
  "description": "It' a react table for bootstrap",
  "main": "./lib/index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/AllenFang/react-bootstrap-table.git"
  },
  "scripts": {
    "test": "jest"
  },
  "keywords": [
    "react",
    "bootstrap",
    "table",
    "grid",
    "react-component"
  ],
  "files": [
    "README.md",
    "dist/",
    "lib/",
    "css/"
  ],
  "author": {
    "name": "AllenFang"
  },
  "license": "MIT",
  "devDependencies": {
    "babel": "^5.1.10",
    "babel-core": "^5.8.25",
    "babel-loader": "^5.3.2",
    "babelify": "^5.0.4",
    "browserify": "^9.0.3",
    "css-loader": "^0.18.0",
    "gulp": "^3.8.11",
    "gulp-babel": "^4.0.1",
    "gulp-concat-css": "^2.2.0",
    "gulp-cssmin": "^0.1.6",
    "jest-cli": "^0.4.0",
    "jsx-loader": "^0.13.2",
    "react": "^0.13.2",
    "react-hot-loader": "^1.3.0",
    "react-router": "^1.0.0-rc1",
    "style-loader": "^0.12.4",
    "vinyl-source-stream": "^1.1.0",
    "watchify": "^3.0.0",
    "webpack-dev-server": "^1.12.0"
  },
  "dependencies": {
    "react-toastr": "^1.5.1",
    "classnames": "^2.1.2",
    "toastr": "^2.1.2"
  },
  "jest": {
    "scriptPreprocessor": "<rootDir>/preprocessor.js",
    "unmockedModulePathPatterns": [
      "<rootDir>/node_modules/react"
    ]
  },
  "readme": "# react-bootstrap-table\nIt's a react table for bootstrap, named reactbsTable\n\nAs you know, the basic bootstrap table function like striped, bordered, hover and condensed are supported.\n\nIn addition, reactbsTable support these features:\n\n* column align\n* column hidden\n* scrolling table\n* data sort\n* cell format\n* pagination\n* row selection\n* column filter\n* cell edit with multi type editor\n* Insert & Delete Row\n* row and column style customize\n* Search\n\nYou can see the [home page](http://allenfang.github.io/react-bootstrap-table/index.html). and example is on [here](http://allenfang.github.io/react-bootstrap-table/example.html).\n\n### Development\nreact-bootstrap-table dependencies on react 0.13.x and Bootstrap 3 written by ES6 and use gulp and browserify to build\n\nUse following command to prepare development\n```\n$ git clone https://github.com/AllenFang/react-bootstrap-table.git\n$ cd react-bootstrap-table\n$ npm install\n```\nUse gulp to build the react-bootstrap-table\n```\n$ gulp dev  #for development\n$ gulp prod #for production\n```\n\n### Usage\nDownload react-bootstrap-table first.\n```\nnpm install react-bootstrap-table --save\n```\nUse react-bootstrap-table in your react app\n\nYou can import react-bootstrap-table in two way, as following:\n#### module(CommonJS/AMD)\n```\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';  // in ECMAScript 6\n// or\nvar ReactBSTable = require(\"react-bootstrap-table\");  \nvar BootstrapTable = ReactBSTable.BootstrapTable;\nvar TableHeaderColumn = ReactBSTable.TableHeaderColumn;\n```\n#### Browser global(window object)\n```\n<script src=\"path/to/react-bootstrap-table/dist/react-bootstrap-table.min.js\" />\n<script>\n  var ReactBsTable = window.BootstrapTable;\n<script/>\n```\n\nFinally, you need import the css file to your app\n```\n<link rel=\"stylesheet\" href=\"./css/react-bootstrap-table.min.css\">\n```\nthe react-bootstrap-table.min.css file you can find in the css folder\n\nAfter import reactbsTable, use it in your react app\n\nYou can find more detail example code in example folder\n\n```\n// products will be presented by reactbsTable\nvar products = [\n  {\n      id: 1,\n      name: \"Item name 1\",\n      price: 100\n  },{\n      id: 2,\n      name: \"Item name 2\",\n      price: 100\n  },{\n      id: 3,\n      name: \"Item name 3\",\n      price: 110\n  },{\n      id: 4,\n      name: \"Item name 4\",\n      price: 100\n  },{\n      id: 5,\n      name: \"Item name 5\",\n      price: 100\n  },{\n      id: 6,\n      name: \"Item name 6\",\n      price: 100\n  }\n];\n// It's a data format example.\nfunction priceFormatter(cell, row){\n  return '<i class=\"glyphicon glyphicon-usd\"></i> ' + cell;\n}\n\nReact.render(\n  <BootstrapTable data={products} height=\"120\" striped={true} hover={true}>\n      <TableHeaderColumn dataField=\"id\" isKey={true} dataAlign=\"center\" dataSort={true}>Product ID</TableHeaderColumn>\n      <TableHeaderColumn dataField=\"name\" dataSort={true}>Product Name</TableHeaderColumn>\n      <TableHeaderColumn dataField=\"price\" dataFormat={priceFormatter}>Product Price</TableHeaderColumn>\n  </BootstrapTable>,\n\tdocument.getElementById(\"basic\")\n);\n```\n### See react-bootstrap-table examples\n```\n$ git clone https://github.com/AllenFang/react-bootstrap-table.git\n$ cd react-bootstrap-table\n$ npm install\n$ gulp example-server #after start, open browser and go to http://localhost:3004/example-list.html\n```\n\n### API&Attribute\n\nYou can reference [here](http://allenfang.github.io/react-bootstrap-table/docs.html) on web site\n\n####The attributes in &lt;BootstrapTable&gt;:</br>\nUse ```data``` to specify the data that you want to display on table.</br>\nUse ```height``` to set the table height, default is 100%.</br>\nUse ```bordered``` to set the table border, default is true.</br>\nUse ```striped``` to set table be a striped columns. Like bootstrap table class ```.table-striped```.</br>\nUse ```hover``` to enable table hover. Like bootstrap table class ```.table-hover```.</br>\nUse ```condensed``` to set a condensed table. Like bootstrap table class ```.table-condensed```.</br>\nUse ```pagination``` to enable the pagnation on table.</br>\nUse ```insertRow``` to enable the insert row on table.</br>\nUse ```deleteRow``` to enable the delete row on table.</br>\nUse ```columnFilter``` to enable the column filter on table.</br>\nUse ```search``` to enable the search on table.</br>\nUse ```searchPlaceholder``` to change the placeholder text in the search field.</br>\nUse  ```trClassName``` to set tr row class,accept string or function. if use function,will pass rowData and rowIndex params.</br>\nUse ```selectRow``` to enable the row selection on table, this attribute accept an object which contain these properties.</br>\n- ```mode```(required): radio/checkbox, to specify the selection is single or multiple.</br>\n- ```clickToSelect```(optional): if true, click on row will trigger row selection, default is false.</br>\n- ```hideSelectColumn```(optional): if true, the radio/checkbox column will be hidden, if you enable clickToSelect.</br>\n- ```clickToSelectAndEditCell```(optional): if true, click the row will trigger selection on that row, and also trigger cell editing if you enabled cell edit.</br>\n- ```bgColor```(optional): You can assign background color if row be selected.</br>\n- ```selected```(optional): it's for default selected row on table, give an array object which contain selected row keys.</br>\n- ```onSelect```(optional): accept a callback function, if a row be selected, this function will be called.</br>\n- ```onSelectAll```(optional): accept a callback function, if select all in ```checkbox``` mode, this function will be called.</br>\n\nUse ```cellEdit``` to enable the cell editing on table, it accept a object which contain these properties</br>\n- ```mode```(required): click/dbclick, to spectify which condition will trigger cell editing.</br>\n- ```blurToSave```(optional): if true, when mouse blur on input field will trigger a save on cell, default is false.</br>\n- ```afterSaveCell```(optional): accept a callback function, after save cell, this function will be called.</br>\n\nUse ```options``` to set other settings for react-bootstrap-table, this prop accept an object which include these properties:<br/>\n- ```sortName```: Assign a default sort field by this property</br>\n- ```sortOrder```(asc/desc): Assign a default sort order</br>\n- ```afterTableComplete```: Assign a callback function which will be called after table update</br>\n- ```afterDeleteRow```: Assign a callback function which will be called after row delete</br>\n- ```afterInsertRow```: Assign a callback function which will be called after row insert</br>\n- ```page```: accept a number, which means the page you want to show as default</br>\n- ```sizePerPageList```: you can change the dropdown list for size per page, accept an array object.</br>\n- ```sizePerPage```: means size per page you want to locate as default, accept a number.</br>\n- ```paginationSize```: define the pagination bar size, accept a number.</br>\n\n\n####The attributes in &lt;TableHeaderColumn&gt;:</br>\nUse ```isKey``` to specify which column is unique.</br>\nUse ```width``` to set the width on column</br>\nUse ```dataField``` to specify which column you want to show on this column.</br>\nUse ```dataAlign``` to set align in column. Available value is left, center, right, start and end.</br>\nUse ```dataSort``` to enable the sorting in column. Default value is false(disabled).</br>\nUse ```dataFormat``` to customize this column.Must give it as a function.</br>\nUse ```hidden``` to enable hidden column.</br>\nUse ```className``` to add custom css class for table header column,accept string or function. if use function,will pass cellData,rowData,rowIndex,columnIndex for params</br>\nUse ```columnClassName``` to add custom css class for table body column, accept string or function. If use function will pass fieldValue,row,rowIdx,colIdx</br>\nUse  ```editable ``` to specify column editable,accept boolean or input type string or config object or function, default is true. This attribute only works on cellEdit be setted in <BootstrapTable> certainly. if use function,will pass cellData,rowData,rowIndex,columnIndex for params, and expect return the config object or input type string</br>\neditable config object include these properties:</br>\n- ```type ```(required): indicate input type. support type is:select,textarea,text and password...\n- ```style ```(optional):input style,react foramt\n- ```className ```(optional):input class\n- ```datas ```(required): only required on type is select, array of data for option in select\n-  ```cols ```(optional):only use on type is textarea, number for textarea cols\n-   ```rows ```(optional):only use on type is textarea, number for textarea rows\n\nUse ```sortFunc``` to customize your sort function.</br>\n\n#### About TableDataSet\nAfter v0.8.0, react-bootstrap-table provide the ability of updating table data on fly. How to do it?\n\n- Import TableDataSet\n```\nvar ReactBsTable  = require('react-bootstrap-table');\nvar TableDataSet = ReactBsTable.TableDataSet; //import TableDataSet\n```\n- Create a TableDataSet object with you data.\n```\nvar dataSet = new TableDataSet(products);\n```\n- Pass this object to data\n```\n<BootstrapTable data={dataSet}>\n   ...\n</BootstrapTable>\n```\n- If you want to reset or update table data in any time, you can:\n```\ndataSet.setData(newproducts);\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/AllenFang/react-bootstrap-table/issues"
  },
  "_id": "react-bootstrap-table@1.0.3",
  "dist": {
    "shasum": "35a155fa5b44d2d214e0897c1b5eda2a8cb3d40a"
  },
  "_from": "react-bootstrap-table@1.0",
  "_resolved": "https://registry.npmjs.org/react-bootstrap-table/-/react-bootstrap-table-1.0.3.tgz"
}
