{
  "name": "css-loader",
  "version": "0.9.1",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "description": "css loader module for webpack",
  "dependencies": {
    "csso": "1.3.x",
    "source-map": "~0.1.38",
    "loader-utils": "~0.2.2"
  },
  "devDependencies": {
    "mocha": "1.8.x",
    "should": "1.1.x"
  },
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:webpack/css-loader.git"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/mit-license.php"
    }
  ],
  "readme": "# css loader for webpack\r\n\r\n## installation\r\n\r\n`npm install css-loader`\r\n\r\n## Usage\r\n\r\n[Documentation: Using loaders](http://webpack.github.io/docs/using-loaders.html)\r\n\r\n``` javascript\r\nvar css = require(\"css!./file.css\");\r\n// => returns css code from file.css, resolves imports and url(...)\r\n```\r\n\r\n`@import` and `url(...)` are interpreted like `require()` and will be resolved by the css-loader.\r\nGood loaders for requiring your assets are the [file-loader](https://github.com/webpack/file-loader)\r\nand the [url-loader](https://github.com/webpack/url-loader) which you should specify in your config (see below).\r\n\r\nTo be compatible with existing css files:\r\n* `url(image.png)` => `require(\"./image.png\")`\r\n* `url(~module/image.png)` => `require(\"module/image.png\")`\r\n\r\n### Example config\r\n\r\nThis webpack config can load css files, embed small png images as Data Urls and jpg images as files.\r\n\r\n``` javascript\r\nmodule.exports = {\r\n  module: {\r\n    loaders: [\r\n      { test: /\\.css$/, loader: \"style-loader!css-loader\" },\r\n      { test: /\\.png$/, loader: \"url-loader?limit=100000&mimetype=image/png\" },\r\n      { test: /\\.jpg$/, loader: \"file-loader\" }\r\n    ]\r\n  }\r\n};\r\n```\r\n\r\n### 'Root-relative' urls\r\n\r\nFor urls that start with a `/`, the default behavior is to not translate them:\r\n* `url(/image.png)` => `url(/image.png)`\r\n\r\nIf a `root` query parameter is set, however, it will be prepended to the url\r\nand then translated:\r\n\r\nWith a config like:\r\n\r\n``` javascript\r\n    loaders: [\r\n      { test: /\\.css$/, loader: \"style-loader!css-loader?root=.\" },\r\n      ...\r\n    ]\r\n```\r\n\r\nThe result is:\r\n\r\n* `url(/image.png)` => `require(\"./image.png\")`\r\n\r\n### SourceMaps\r\n\r\nTo include SourceMaps set the `sourceMap` query param.\r\n\r\n`require(\"css-loader?sourceMap!./file.css\")`\r\n\r\nI. e. the extract-text-webpack-plugin can handle them.\r\n\r\n### importing and chained loaders\r\n\r\nThe query parameter `importLoaders` allow to configure which loaders should be applied to `@import`ed resources.\r\n\r\n`importLoaders` (int): That many loaders after the css-loader are used to import resources.\r\n\r\nExamples:\r\n\r\n``` js\r\nrequire(\"style-loader!css-loader?importLoaders=1!autoprefixer-loader!...\")\r\n// => imported resources are handled this way:\r\nrequire(\"css-loader?importLoaders=1!autoprefixer-loader!...\")\r\n\r\nrequire(\"style-loader!css-loader!stylus-loader!...\")\r\n// => imported resources are handled this way:\r\nrequire(\"css-loader!...\")\r\n```\r\n\r\n### Minification\r\n\r\nBy default the css-loader minimizes the css if specified by the module system.\r\n\r\nIn some cases the structural minification is destructive to the css, so you can disable it with the `disableStructuralMinification` query parameter. `require(\"css-loader?disableStructuralMinification!./file.css\")`\r\n\r\nYou can also disable or enforce minification with the `minimize` query parameter.\r\n\r\n`require(\"css-loader?minimize!./file.css\")` (enforced)\r\n\r\n`require(\"css-loader?-minimize!./file.css\")` (disabled)\r\n\r\nYou cannot use minimize with SourceMaps.\r\n\r\n## License\r\n\r\nMIT (http://www.opensource.org/licenses/mit-license.php)\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/webpack/css-loader/issues"
  },
  "_id": "css-loader@0.9.1",
  "dist": {
    "shasum": "f8821964a533618bce0907b2ef039ff522d015d9"
  },
  "_from": "css-loader@^0.9.1",
  "_resolved": "https://registry.npmjs.org/css-loader/-/css-loader-0.9.1.tgz"
}
